snippet main "main entry" b
if __name__ == '__main__':
    main()
endsnippet

snippet amain "async main entry" b
if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
endsnippet

snippet m "method" b
def ${1:methodname}(self, ${2:*args, **kargs}):
    ${0:...}
endsnippet

snippet am "async method" b
async def ${1:methodname}(self, ${2:*args, **kargs}):
    ${0:...}
endsnippet

snippet cm "classmethod" b
@classmethod
def ${1:methodname}(cls, ${2:*args, **kargs}):
    ${0:...}
endsnippet

snippet acm "async classmethod" b
@classmethod
async def ${1:methodname}(cls, ${2:*args, **kargs}):
    ${0:...}
endsnippet

snippet pro "property" b
@property
def ${1:property_name}(self):
    ${0:...}
endsnippet
